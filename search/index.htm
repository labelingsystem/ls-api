<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        <title>Labeling System Search</title>
		<link rel="stylesheet" href="style.css">
		<script src="http://code.jquery.com/jquery-latest.js"></script>
		<!--CodeMirror-->
		<link rel="stylesheet" href="lib/codemirror.css">
		<script src="lib/codemirror.js"></script>
		<script src="addon/edit/matchbrackets.js"></script>
		<script src="cm-sparql.js"></script>
    </head>
    <body>
		<h1>Labeling System Search</h1>
        <input type="text" id="searchstring" value="" placeholder="search string">
        <input type="button" class="btn btn-default disabled" value="SUBMIT FULLTEXT QUERY" id="sendfulltextquery">
        <span id="sparqlfield"><textarea id='sparql_eingabe'></textarea></span>
    	<input type="button" class="btn btn-default" value="RUN SPARQL QUERY" id="sendsparqltextarea">
        <span id="sendlink"></span>
        <br>
        <span id="result"></span>
    </body>
</html>

<script>
    var host = "http://143.93.114.135"; // http://labeling.link || http://143.93.114.135
    var itemAPI = "item";
    var itemV = "vocabulary"; // vocab || vocabulary
    var itemC = "label"; // concept || label
    var itemA = "agent"; // agent || agent
    var itemR = "revision"; // revision || revision
	var editor;
    var SPARQLAPI = host + "/api/v1/sparql";
    var SEARCHAPI = host + "/api/v1/search";
    var PREFIXES = "PREFIX ls: <http://labeling.link/docs/ls/core#>\n" +
        "PREFIX skos: <http://www.w3.org/2004/02/skos/core#>\n" +
		"PREFIX ls_lab: <"+host+"/"+itemAPI+"/"+itemC+"/>\n" +
		"PREFIX ls_voc: <"+host+"/"+itemAPI+"/"+itemV+"/>\n" +
		"PREFIX ls_rev: <"+host+"/"+itemAPI+"/"+itemR+"/>\n" +
		"PREFIX ls_age: <"+host+"/"+itemAPI+"/"+itemA+"/>\n" +
        "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n" +
        "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n" +
        "PREFIX dc: <http://purl.org/dc/elements/1.1/>\n" +
        "PREFIX dct: <http://purl.org/dc/terms/>\n" +
        "PREFIX owl: <http://www.w3.org/2002/07/owl#>\n" +
        "PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n" +
        "PREFIX prov: <http://www.w3.org/ns/prov#>\n" +
        "PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n\n";
    var QUERY_RESET = "SELECT ?concept ?label ?creator ?vocab ?vocabtitle WHERE {\n" +
        "  ?concept a ls:Label.\n" +
        "  ?concept dct:creator ?creator.\n" +
		"  ?concept ls:thumbnail ?label .\n" +
		"  ?concept skos:inScheme ?vocab.\n" +
		"  ?vocab ls:hasReleaseType ls:Public.\n" +
		"  ?vocab dc:title ?vocabtitle.\n" +
        "} ORDER BY ASC(?label) \n" +
        "LIMIT 50";

    // set sparql field and load default
    $("#sparqlfield").html("");
    $("#sparqlfield").html("<textarea id='sparql_eingabe'></textarea>");
    editor = CodeMirror.fromTextArea(document.getElementById("sparql_eingabe"), {
        mode: "application/sparql-query",
        matchBrackets: true
    });
    editor.setValue(PREFIXES + QUERY_RESET);

    $("#clearresults").click(function() {
        $('#result').html("");
        $('#xmllink').html("");
        $('#jsonlink').html("");
        $('#csvlink').html("");
    });

    function setSPARQLResultsLinks() {
        var m = encodeURIComponent(editor.getValue());
        var l = SPARQLAPI + "?query=" + m + "&out=xml";
        var h = "<a class='grey' href='" + l + "' target='_blank'>SPARQL/XML</a> | ";
        $('#xmllink').html(h);
        var l = SPARQLAPI + "?query=" + m + "&out=json";
        var h = "<a class='grey' href='" + l + "' target='_blank'>SPARQL/JSON</a> | ";
        $('#jsonlink').html(h);
        var l = SPARQLAPI + "?query=" + m + "&out=csv";
        var h = "<a class='grey' href='" + l + "' target='_blank'>CSV</a>";
        $('#csvlink').html(h);
    }

    $('#searchstring').keyup(function() {
        if ($('#searchstring').val().length>0) {
            $('#sendfulltextquery').removeClass("disabled");
        } else {
            $('#sendfulltextquery').addClass("disabled");
        }
    });

    editor.on('keyup', function() {
        $('#result').html("");
        $('#xmllink').html("");
        $('#jsonlink').html("");
        $('#csvlink').html("");
    });

    $("#sendfulltextquery").click(function() {
    	$('#result').html('<b>Loading...</b> <img src="loading.gif" height="40">');
        $.ajax({
            type: 'GET',
            url: SEARCHAPI,
            data: {
                query: encodeURIComponent($("#searchstring").val()),
				maxhits: 50
            },
            error: function(jqXHR, textStatus, errorThrown) {
                $('#result').html(errorThrown);
                console.error(errorThrown);
            },
            success: function(output) {
                try {
					output = JSON.parse(output);
				} catch (e) {}
                var vars = ["Subject","Terms","Parents","Description","Similarity (normalized Levenshtein distance)"];
				var size = 25;
                var html_str = "";
                html_str += "<span class='resultsleft'>Results for \""+$("#searchstring").val()+"\" ("+output.length+")</span>";
                html_str += "<table id='result'>";
                for (var item in vars) {
                	html_str += "<th>" + vars[item] + "</th>";
                }
                var bgcolor = true;
                for (var item in output) {
                    if (bgcolor) {
                        html_str += "<tr width='"+size+"%' class='nobg'>";
                    } else {
                        html_str += "<tr width='"+size+"%' class='bg'>";
                    }
                	html_str += "<td width='"+size+"%'><a href='"+output[item]["uri"]+"' target='_blank'>" + output[item]["uri"].replace(host+"/"+itemAPI+"/"+itemC+"/","ls_lab:") + "</a></td>";
                	html_str += "<td width='"+size+"%'>";
					for (var prefLabel in output[item].prefLabels) {
						html_str += output[item].prefLabels[prefLabel]["label"] + "@" + output[item].prefLabels[prefLabel]["lang"]+ "<br>";
					}
            		html_str += "</td>";
                	html_str += "<td width='"+size+"%'>";
					if (output[item].broaderTerms.length > 0) {
						for (var broaderTerm in output[item].broaderTerms) {
							html_str += output[item].broaderTerms[broaderTerm]["label"] + "<br>";
						}
					} else {
						html_str += "<i>none</i>";
					}
            		html_str += "</td>";
                	if (output[item]["scopeNote"]) {
						html_str += "<td width='"+size+"%'>" + output[item]["scopeNote"]["note"] + "</td>";
					} else {
						html_str += "<td width='"+size+"%'>" + "<i>undefined</i>" + "</td>";
					}
                    if (output[item]["similarityNormalizedLevenshtein"]) {
						html_str += "<td width='"+size+"%'>";
                        var labelDist = output[item]["similarityNormalizedLevenshtein"]["label"];
                        var noteDist = output[item]["similarityNormalizedLevenshtein"]["scopeNote"];
                        html_str += "best term: <b>" + Math.round(labelDist*100)/100 + "</b><br>";
                        if (noteDist) {
                            html_str += "description: <b>" + Math.round(noteDist*100)/100 + "</b>";
                        }
                        html_str += "</td>";
					} else {
						html_str += "<td width='"+size+"%'>" + "<i>undefined</i>" + "</td>";
					}
                    html_str += "</tr>";
                    if (bgcolor) {
                    	bgcolor = false;
                    } else {
                    	bgcolor = true;
                    }
                }
                html_str += "</table>";
                // set div/span with sparql table content
                $('#result').html("");
                $('#result').html(html_str);
            }
        });
    });
	$("#sendsparqltextarea").click(function() {
    	$('#result').html('<b>Loading...</b> <img src="loading.gif" height="40">');
        query = editor.getValue();
        query = encodeURIComponent(query);
        $.ajax({
            type: 'POST',
            url: SPARQLAPI,
            dataType: "text",
            data: {
                query: query,
                out: "json"
            },
            error: function(jqXHR, textStatus, errorThrown) {
                $('#result').html(errorThrown);
                console.error(errorThrown);
            },
            success: function(output) {
                try {
					output = JSON.parse(output);
				} catch (e) {}
                var vars = output.head.vars;
				var bindings = output.results.bindings;
				var size = 100/vars.length;
                var html_str = "";
                html_str += "<span class='resultsleft'>SPARQL Results ("+bindings.length+")</span>";
                html_str += '<span class="resultsright">SPARQL Results in: <span id="xmllink"></span><span id="jsonlink"></span><span id="csvlink"></span><span id="csvfile"></span></span>';
                html_str += "<table id='result'>";
                for (var item in vars) {
                	html_str += "<th>" + vars[item] + "</th>";
                }
                var bgcolor = true;
                for (var item in bindings) {
                    if (bgcolor) {
                        html_str += "<tr width='"+size+"%' class='nobg'>";
                    } else {
                        html_str += "<tr width='"+size+"%' class='bg'>";
                    }
                    var size = 100/vars.length;
                    for (var varstr in vars) {
                    	var tblTxt = "";
                    	if (bindings[item][vars[varstr]].type==="uri") {
                    		var val = bindings[item][vars[varstr]].value;
                    		// instances
                    		val = val.replace(host+"/"+itemAPI+"/"+itemC+"/","ls_lab:");
                    		val = val.replace(host+"/"+itemAPI+"/"+itemV+"/","ls_voc:");
                    		val = val.replace(host+"/"+itemAPI+"/"+itemA+"/","ls_age:");
                    		val = val.replace(host+"/"+itemAPI+"/"+itemR+"/","ls_rev:");
                    		// prefixes
                    		val = val.replace("http://labeling.link/docs/ls/core#","ls:");
                    		val = val.replace("http://www.w3.org/2004/02/skos/core#","skos:");
                    		val = val.replace("http://www.w3.org/1999/02/22-rdf-syntax-ns#","rdf:");
                    		val = val.replace("http://www.w3.org/2000/01/rdf-schema#","rdfs:");
                    		val = val.replace("http://purl.org/dc/elements/1.1/","dc:");
                    		val = val.replace("http://purl.org/dc/terms/","dct:");
                    		val = val.replace("http://www.w3.org/2002/07/owl#","owl:");
                    		val = val.replace("http://www.w3.org/2001/XMLSchema#","xsd:");
                    		val = val.replace("http://xmlns.com/foaf/0.1/","foaf:");
                    		val = val.replace("http://www.w3.org/ns/prov#","prov:");
                    		tblTxt = "<a href='"+bindings[item][vars[varstr]].value+"' target='_blank'>"+val+"</a>";
                    	} else if (bindings[item][vars[varstr]]["xml:lang"]) {
                    		tblTxt = bindings[item][vars[varstr]].value + "@" + bindings[item][vars[varstr]]["xml:lang"];
                    	} else {
                    		tblTxt = bindings[item][vars[varstr]].value;
                    	}
                    	html_str += "<td width='"+size+"%'>" + tblTxt + "</td>";
                    }
                    html_str += "</tr>";
                    if (bgcolor) {
                    	bgcolor = false;
                    } else {
                    	bgcolor = true;
                    }
                }
                html_str += "</table>";
                // set div/span with sparql table content
                $('#result').html("");
                $('#result').html(html_str);
                setSPARQLResultsLinks();
            }
        });
    });
</script>
